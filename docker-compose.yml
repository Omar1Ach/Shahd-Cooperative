version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: shahdcooperative-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Omar123@
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - shahdcooperative-network
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Omar123@ -Q "SELECT 1" -C || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Elasticsearch for Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: shahdcooperative-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - shahdcooperative-network
    healthcheck:
      test: curl -f http://localhost:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Kibana for Log Visualization (Optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: shahdcooperative-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - shahdcooperative-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:5601/api/status || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: shahdcooperative-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - shahdcooperative-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # ShahdCooperative API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shahdcooperative-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ShahdCooperative;User Id=sa;Password=Omar123@;TrustServerCertificate=True;MultipleActiveResultSets=true
      - ElasticsearchSettings__Uri=http://elasticsearch:9200
      - JwtSettings__SecretKey=YourSuperSecretKeyForProduction_MustBeAtLeast32Characters!
      - JwtSettings__Issuer=ShahdCooperativeAuthService
      - JwtSettings__Audience=ShahdCooperativeAPI
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=admin123
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__Exchange=shahdcooperative.events
      - Serilog__WriteTo__1__Args__nodeUris=http://elasticsearch:9200
    ports:
      - "5000:8080"
    networks:
      - shahdcooperative-network
    depends_on:
      sqlserver:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8080/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  shahdcooperative-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local
  elasticsearch_data:
    driver: local
  rabbitmq_data:
    driver: local
